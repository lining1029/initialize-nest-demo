var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AnyExceptionFilter.html",[0,0.104,1,2.068]],["body/classes/AnyExceptionFilter.html",[0,0.102,1,2.78,2,1.572,3,0.344,4,0.291,5,0.291,6,3.247,7,2.03,8,1.257,9,3.703,10,0.344,11,0.909,12,3.983,13,3.247,14,4.511,15,3.703,16,3.983,17,0.524,18,2.37,19,0.741,20,0.04,21,0.591,22,0.524,23,0.741,24,3.247,25,0.663,26,1.775,27,0.401,28,2.432,29,2.03,30,0.401,31,0.344,32,2.642,33,2.37,34,2.37,35,1.403,36,2.37,37,1.775,38,2.37,39,2.78,40,2.37,41,2.37,42,2.887,43,2.37,44,2.37,45,2.37,46,1.572,47,2.37,48,2.03,49,2.37,50,0.02,51,0.027,52,0.02]],["title/controllers/AppController.html",[53,1.602,54,1.809]],["body/controllers/AppController.html",[0,0.124,3,0.419,4,0.354,5,0.354,10,0.419,11,1.034,17,0.636,20,0.04,25,0.806,27,0.625,30,0.487,31,0.419,50,0.024,51,0.031,52,0.024,53,2.451,54,2.768,55,1.911,56,2.881,57,4.304,58,2.467,59,3.509,60,1.764,61,2.415,62,2.881,63,2.158,64,2.158,65,1.003,66,3.509]],["title/modules/AppModule.html",[67,1.602,68,1.809]],["body/modules/AppModule.html",[0,0.071,3,0.24,4,0.203,5,0.203,8,0.639,11,0.462,17,0.364,19,0.516,20,0.041,21,0.411,22,0.364,23,0.516,25,0.462,27,0.73,30,0.279,31,0.24,48,2.584,50,0.014,51,0.021,52,0.014,54,2.26,55,1.658,61,2.253,62,1.65,67,2.001,68,3.05,69,1.094,70,1.094,71,1.413,72,1.413,73,1.094,74,2.584,75,1.413,76,1.65,77,1.65,78,1.65,79,2.524,80,2.14,81,1.413,82,1.413,83,2.01,84,3.045,85,2.01,86,3.045,87,4.1,88,2.01,89,3.045,90,3.045,91,2.01,92,2.01,93,2.01,94,2.14,95,2.01,96,1.094,97,2.01,98,4.406,99,1.413,100,1.658,101,1.65,102,1.65,103,1.658,104,1.65,105,1.658,106,1.65,107,1.658,108,1.65,109,4.1,110,4.1,111,2.01,112,2.01,113,2.01,114,2.01,115,2.882,116,3.675,117,3.045,118,2.01,119,2.01,120,2.01]],["title/injectables/AppService.html",[61,1.43,121,0.408]],["body/injectables/AppService.html",[0,0.132,3,0.444,4,0.376,5,0.376,10,0.444,11,1.074,17,0.675,20,0.04,25,0.856,27,0.517,30,0.517,31,0.444,50,0.025,51,0.032,52,0.025,57,4.399,60,1.832,61,2.272,65,1.065,121,0.649,122,1.46,123,3.057,124,3.724,125,3.724,126,3.724]],["title/interfaces/Cat.html",[127,1.43,128,1.602]],["body/interfaces/Cat.html",[3,0.43,4,0.363,5,0.363,10,0.43,20,0.039,21,1.084,22,0.912,31,0.43,50,0.025,51,0.031,52,0.025,60,2.189,127,1.751,128,2.493,129,2.533,130,2.958,131,2.815,132,4.346,133,4.346,134,3.537]],["title/controllers/CatsController.html",[53,1.602,96,1.602]],["body/controllers/CatsController.html",[0,0.037,3,0.124,4,0.105,5,0.105,10,0.124,11,0.41,17,0.837,19,0.937,20,0.041,21,0.747,22,0.504,23,0.937,25,1.112,26,1.097,27,0.652,28,1.097,29,0.731,30,0.144,31,0.124,37,2.098,39,0.731,46,1.703,50,0.007,51,0.012,52,0.007,53,0.566,55,0.566,58,3.245,60,1.577,63,0.639,65,1.151,96,0.972,100,1.276,101,0.854,102,0.854,103,1.276,104,0.854,105,0.566,106,0.854,107,0.972,108,0.854,115,1.254,128,1.703,135,0.854,136,1.04,137,2.281,138,3.857,139,1.784,140,1.784,141,1.784,142,1.465,143,2.778,144,2.778,145,2.778,146,2.778,147,2.778,148,2.778,149,1.784,150,1.784,151,1.784,152,1.04,153,1.784,154,1.784,155,1.04,156,1.04,157,2.935,158,3.65,159,1.04,160,1.04,161,1.04,162,1.04,163,1.04,164,1.04,165,1.04,166,1.04,167,1.04,168,1.04,169,1.363,170,1.04,171,0.867,172,1.04,173,1.04,174,1.04,175,1.04,176,1.04,177,2.778,178,1.04,179,1.784,180,1.04,181,1.04,182,2.343,183,1.04,184,1.04,185,1.784,186,1.04,187,2.778,188,1.784,189,0.854,190,1.04,191,1.04,192,1.04,193,1.04,194,1.04,195,1.04,196,1.04,197,1.04,198,1.04,199,1.04,200,0.731,201,0.408,202,1.04,203,1.04,204,1.139,205,0.854,206,0.854,207,1.441,208,1.04,209,0.639,210,1.04,211,1.097,212,1.04,213,0.972,214,1.04,215,1.097,216,1.04,217,1.04,218,2.778,219,1.784,220,1.04,221,1.04,222,3.127,223,1.784,224,1.04,225,1.04,226,1.04,227,1.04,228,1.04,229,1.04,230,1.04,231,1.04,232,1.04,233,1.04,234,1.04,235,1.04,236,1.04,237,1.04,238,1.04,239,1.04,240,2.281,241,1.04,242,1.924,243,1.04,244,1.04,245,1.04,246,1.04,247,1.04,248,1.04]],["title/modules/CatsModule.html",[67,1.602,79,1.602]],["body/modules/CatsModule.html",[0,0.109,3,0.367,4,0.31,5,0.31,20,0.04,27,0.646,30,0.426,31,0.367,50,0.021,51,0.028,52,0.021,55,2.247,63,1.89,64,1.89,67,2.536,69,1.673,70,1.673,71,2.16,72,2.16,73,1.673,74,3.274,75,3.274,79,2.975,80,2.9,81,2.16,82,2.16,96,2.536,204,2.839,205,2.523,249,2.523,250,2.523,251,2.523,252,3.073,253,3.073]],["title/injectables/CatsService.html",[121,0.408,204,1.43]],["body/injectables/CatsService.html",[0,0.104,3,0.351,4,0.296,5,0.296,10,0.351,11,0.92,17,0.825,19,0.754,20,0.04,21,0.601,22,0.726,23,0.754,25,0.92,26,1.806,27,0.555,30,0.408,31,0.351,50,0.02,51,0.027,52,0.02,64,2.799,65,0.84,115,3.2,121,0.555,122,1.151,128,3.034,131,2.461,137,3.286,142,4.012,204,1.945,206,2.412,254,2.412,255,3.2,256,4.002,257,2.938,258,2.938,259,2.412,260,1.806,261,2.938,262,2.938,263,2.938]],["title/classes/CreateCatDto.html",[0,0.104,157,1.809]],["body/classes/CreateCatDto.html",[0,0.146,2,1.666,3,0.365,4,0.308,5,0.308,10,0.365,17,0.843,20,0.039,21,0.951,22,0.843,27,0.425,31,0.365,50,0.021,51,0.028,52,0.021,58,3.267,60,1.948,64,3.455,131,2.529,132,3.815,133,3.815,134,2.891,157,2.529,264,4.08,265,2.511,266,4.647,267,3.059,268,5.185,269,3.059,270,3.059,271,3.059,272,2.15]],["title/injectables/ExcludeNullInterceptor.html",[121,0.408,211,1.809]],["body/injectables/ExcludeNullInterceptor.html",[0,0.106,3,0.358,4,0.303,5,0.303,8,0.955,10,0.358,11,0.934,17,0.545,19,0.771,20,0.041,21,0.615,22,0.545,23,0.771,25,0.69,27,0.639,30,0.417,31,0.358,50,0.02,51,0.028,52,0.02,65,0.859,121,0.564,122,1.177,169,2.007,171,1.975,201,1.177,211,2.498,260,2.498,273,2.466,274,2.507,275,1.847,276,2.397,277,2.238,278,2.686,279,3.004,280,1.975,281,2.213,282,2.112,283,1.636,284,3.004,285,3.004]],["title/classes/ForbiddenException.html",[0,0.104,207,1.809]],["body/classes/ForbiddenException.html",[0,0.136,2,2.086,3,0.457,4,0.386,5,0.386,17,0.695,20,0.04,27,0.532,28,3.182,29,2.693,30,0.532,31,0.457,50,0.026,51,0.032,52,0.026,207,2.925,242,3.145,286,3.145,287,4.758,288,4.248,289,3.831,290,3.831]],["title/classes/HttpExceptionFilter.html",[0,0.104,100,1.602]],["body/classes/HttpExceptionFilter.html",[0,0.101,2,1.559,3,0.341,4,0.289,5,0.289,7,2.012,8,1.25,9,3.687,10,0.341,11,0.903,12,3.687,13,3.228,15,3.687,16,3.969,17,0.519,18,2.35,19,0.735,20,0.04,21,0.586,22,0.519,23,0.735,24,2.35,25,0.658,26,1.76,27,0.546,28,2.973,30,0.397,31,0.341,32,2.633,33,2.35,34,2.35,35,1.911,36,2.35,37,2.417,38,2.35,39,2.764,41,2.35,43,2.35,44,2.35,45,2.35,46,1.559,47,2.35,48,2.012,49,2.35,50,0.019,51,0.027,52,0.019,100,2.141,200,2.012,291,3.228,292,2.862,293,2.862,294,2.862]],["title/injectables/LoggingInterceptor.html",[107,1.602,121,0.408]],["body/injectables/LoggingInterceptor.html",[0,0.107,3,0.362,4,0.306,5,0.306,8,0.963,10,0.362,11,0.939,17,0.55,19,0.778,20,0.04,21,0.621,22,0.55,23,0.778,25,0.696,27,0.642,30,0.421,31,0.362,32,1.651,50,0.021,51,0.028,52,0.021,65,0.867,107,2.226,121,0.567,122,1.188,169,2.016,201,1.188,274,2.519,275,1.864,276,2.406,277,2.406,278,2.696,280,1.987,281,2.226,283,1.651,295,2.488,296,3.031,297,3.031,298,3.031,299,3.031,300,3.031,301,3.031,302,3.031,303,3.031,304,3.031]],["title/interfaces/Response.html",[35,1.43,127,1.43]],["body/interfaces/Response.html",[0,0.113,3,0.379,4,0.32,5,0.32,8,1.009,10,0.379,20,0.041,22,0.576,27,0.657,30,0.441,31,0.503,35,2.049,50,0.022,51,0.029,52,0.022,65,0.908,121,0.585,127,1.543,129,2.232,131,2.593,169,1.838,171,1.543,201,1.245,213,1.729,274,1.729,276,2.049,277,1.543,278,2.296,280,1.543,281,2.296,282,2.232,283,1.729,305,2.232,306,4.31,307,3.887,308,2.607]],["title/guards/RolesGuard.html",[105,1.602,309,2.068]],["body/guards/RolesGuard.html",[0,0.086,3,0.288,4,0.244,5,0.244,8,0.768,10,0.288,11,0.802,17,0.743,19,1.052,20,0.041,21,0.838,22,0.743,23,1.052,25,0.802,27,0.568,30,0.335,31,0.288,32,2.23,37,1.486,50,0.016,51,0.024,52,0.016,60,1.943,63,1.486,65,1.171,99,1.699,105,1.9,121,0.484,169,1.785,171,1.696,201,0.947,209,2.519,255,2.879,276,2.18,280,1.696,288,1.984,310,2.417,311,1.984,312,4.757,313,3.49,314,2.417,315,4.957,316,2.417,317,2.417,318,2.417,319,2.865,320,3.49,321,4.096,322,2.417,323,2.417,324,2.417,325,2.417,326,2.417,327,2.417,328,2.417,329,2.417,330,2.417,331,2.417]],["title/injectables/TimeoutInterceptor.html",[121,0.408,215,1.809]],["body/injectables/TimeoutInterceptor.html",[0,0.101,3,0.34,4,0.287,5,0.287,8,0.906,10,0.34,11,0.901,17,0.517,19,0.732,20,0.041,21,0.583,22,0.517,23,0.732,25,0.655,27,0.622,30,0.396,31,0.34,40,2.34,50,0.019,51,0.027,52,0.019,65,1.281,121,0.544,122,1.117,169,1.953,171,1.905,201,1.117,215,2.41,274,2.44,275,1.753,276,2.345,277,2.177,278,2.628,280,1.905,281,2.135,283,1.552,332,2.34,333,2.85,334,3.92,335,3.92,336,2.85,337,2.85,338,2.85,339,2.85,340,2.85,341,2.85,342,2.85,343,2.85,344,2.85]],["title/injectables/TransformInterceptor.html",[121,0.408,213,1.602]],["body/injectables/TransformInterceptor.html",[0,0.105,3,0.354,4,0.299,5,0.299,8,0.942,10,0.354,11,0.925,17,0.537,19,0.761,20,0.041,21,0.607,22,0.537,23,0.761,25,0.681,27,0.635,30,0.411,31,0.48,35,1.44,50,0.02,51,0.027,52,0.02,65,0.848,121,0.559,122,1.162,127,1.44,169,1.993,171,1.957,201,1.162,213,2.192,274,2.49,275,1.823,276,2.384,277,2.222,278,2.671,280,1.957,281,2.192,282,2.084,283,1.614,305,2.084,306,3.305,307,2.433,308,2.433,345,2.964]],["title/injectables/ValidatePipe.html",[103,1.602,121,0.408]],["body/injectables/ValidatePipe.html",[0,0.147,3,0.294,4,0.248,5,0.248,8,0.782,10,0.294,11,0.812,17,0.641,19,0.908,20,0.041,21,0.724,22,0.641,23,0.908,25,0.812,27,0.574,30,0.342,31,0.294,32,2.253,46,1.34,50,0.017,51,0.024,52,0.017,60,0.965,65,1.183,103,1.926,121,0.491,122,0.965,134,1.73,138,3.397,240,2.021,255,2.909,260,2.781,272,1.73,319,3.397,346,2.021,347,3.536,348,3.536,349,3.536,350,3.713,351,2.462,352,4.138,353,3.536,354,2.462,355,4.524,356,2.462,357,2.462,358,3.536,359,2.462,360,2.021,361,2.462,362,2.462,363,3.536,364,2.462,365,2.462,366,2.462,367,2.462,368,2.462,369,2.021,370,2.462,371,2.462,372,2.462,373,2.462,374,2.462]],["title/coverage.html",[375,2.816]],["body/coverage.html",[0,0.161,1,1.737,5,0.249,6,2.028,7,2.492,20,0.04,22,0.448,35,1.201,46,1.345,50,0.017,51,0.024,52,0.017,53,1.931,54,1.519,56,2.028,61,1.201,73,1.345,94,1.737,96,1.345,100,1.345,103,1.345,105,1.345,107,1.345,121,0.714,123,2.028,127,1.723,128,1.345,130,2.028,135,2.028,157,1.519,204,1.201,207,1.519,209,1.519,211,1.519,213,1.345,215,1.519,254,2.028,264,2.028,265,2.028,273,2.028,286,2.028,291,2.028,295,2.028,305,2.492,309,1.737,311,2.028,332,2.028,346,2.028,350,2.911,369,4.766,375,1.737,376,2.471,377,2.471,378,2.471,379,5.438,380,2.471,381,4.531,382,2.028,383,2.471,384,4.147,385,2.028,386,2.471,387,2.028,388,2.471,389,2.471]],["title/dependencies.html",[70,1.925,390,2.461]],["body/dependencies.html",[0,0.169,20,0.04,30,0.535,50,0.026,51,0.033,52,0.026,70,2.098,99,2.709,200,2.709,201,1.51,272,2.709,360,3.163,391,5.188,392,3.853,393,3.853,394,3.853,395,3.853,396,3.853,397,3.853,398,3.853,399,3.853,400,3.853]],["title/miscellaneous/functions.html",[401,1.513,402,2.903]],["body/miscellaneous/functions.html",[10,0.479,19,1.031,20,0.036,21,0.822,23,1.031,50,0.027,51,0.033,52,0.027,73,2.877,94,3.443,189,3.296,277,2.38,385,3.296,387,3.296,401,2.469,402,3.296,403,4.015,404,4.015,405,4.015,406,4.897]],["title/index.html",[10,0.294,407,2.461,408,2.461]],["body/index.html",[4,0.285,20,0.04,50,0.019,51,0.027,52,0.019,375,1.987,409,2.826,410,2.826,411,3.897,412,2.826,413,2.826,414,2.826,415,2.826,416,2.826,417,2.826,418,2.826,419,4.461,420,2.826,421,2.826,422,2.826,423,2.826,424,5.344,425,2.826,426,2.826,427,2.826,428,5.215,429,2.826,430,2.826,431,3.897,432,2.826,433,2.826,434,2.826,435,2.826,436,3.897,437,3.897,438,2.826,439,2.826,440,2.826,441,3.897,442,3.897,443,2.826,444,2.826,445,2.826,446,2.826,447,2.826,448,2.32,449,2.826,450,2.826,451,2.826,452,2.826,453,2.826,454,2.826,455,2.826,456,2.826,457,2.826,458,2.826,459,2.826,460,2.826,461,2.826,462,2.826,463,2.826,464,2.826,465,2.826,466,2.826]],["title/modules.html",[69,2.181]],["body/modules.html",[20,0.035,50,0.029,51,0.035,52,0.029,68,2.644,69,2.341,79,2.341,448,4.189,467,5.103,468,5.103,469,5.103]],["title/overview.html",[470,3.288]],["body/overview.html",[2,1.815,20,0.037,50,0.023,51,0.03,52,0.023,55,1.815,61,2.357,67,1.815,68,3.364,69,1.815,70,1.815,71,2.344,72,2.344,73,1.815,74,2.344,75,2.344,76,2.737,77,2.737,78,2.737,79,2.979,80,3.061,81,2.344,82,2.344,122,1.307,129,2.344,204,2.708,249,2.737,250,2.737,251,2.737,309,2.344,470,2.737,471,4.849,472,3.334,473,3.334,474,3.334]],["title/miscellaneous/variables.html",[401,1.513,475,2.903]],["body/miscellaneous/variables.html",[10,0.5,20,0.038,50,0.029,51,0.034,52,0.029,60,1.643,209,3.432,259,3.441,260,2.577,382,3.441,401,2.577,475,3.441,476,4.191,477,4.191]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":369,"title":{},"body":{"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":474,"title":{},"body":{"overview.html":{}}}],["1044",{"_index":294,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["2",{"_index":471,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":185,"title":{},"body":{"controllers/CatsController.html":{}}}],["4",{"_index":473,"title":{},"body":{"overview.html":{}}}],["5",{"_index":229,"title":{},"body":{"controllers/CatsController.html":{}}}],["6.6.3",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":472,"title":{},"body":{"overview.html":{}}}],["7.5.1",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":222,"title":{},"body":{"controllers/CatsController.html":{}}}],["adds",{"_index":223,"title":{},"body":{"controllers/CatsController.html":{}}}],["age",{"_index":132,"title":{},"body":{"interfaces/Cat.html":{},"classes/CreateCatDto.html":{}}}],["amazing",{"_index":449,"title":{},"body":{"index.html":{}}}],["anyexceptionfilter",{"_index":1,"title":{"classes/AnyExceptionFilter.html":{}},"body":{"classes/AnyExceptionFilter.html":{},"coverage.html":{}}}],["app",{"_index":426,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":54,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":417,"title":{},"body":{"index.html":{}}}],["apply(cors",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["apply(logger",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":68,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":61,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":355,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["argumentshost",{"_index":16,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":373,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["async",{"_index":138,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ValidatePipe.html":{}}}],["author",{"_index":459,"title":{},"body":{"index.html":{}}}],["await",{"_index":366,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["backers",{"_index":450,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":357,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["badrequestexception('validation",{"_index":370,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["body",{"_index":195,"title":{},"body":{"controllers/CatsController.html":{}}}],["boolean",{"_index":319,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/ValidatePipe.html":{}}}],["bootstrap",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":133,"title":{},"body":{"interfaces/Cat.html":{},"classes/CreateCatDto.html":{}}}],["browse",{"_index":469,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":467,"title":{},"body":{"modules.html":{}}}],["building",{"_index":412,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":278,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":312,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":317,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cat",{"_index":128,"title":{"interfaces/Cat.html":{}},"body":{"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat.dto",{"_index":203,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.dto.ts",{"_index":265,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:11",{"_index":269,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:5",{"_index":270,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:8",{"_index":267,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":13,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":292,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":338,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":341,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["cats",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":253,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":205,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.controller",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":96,"title":{"controllers/CatsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":79,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":204,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":0,"title":{"classes/AnyExceptionFilter.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{}},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":249,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":250,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":251,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["common/decorator/roles.decorator",{"_index":210,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/exception/forbidden.exception",{"_index":208,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/filter/http",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["common/guard/roles.guard",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["common/interceptor/exclude.null.interceptor",{"_index":212,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/interceptor/logging.interceptor",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["common/interceptor/timeout.interceptor",{"_index":216,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/interceptor/transform.interceptor",{"_index":214,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/middleware/logger.middleware",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["common/pipe/validate.pipe",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["configure",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('before",{"_index":298,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(`after...${date.now",{"_index":303,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(params.id",{"_index":232,"title":{},"body":{"controllers/CatsController.html":{}}}],["const",{"_index":32,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/ValidatePipe.html":{}}}],["constructor",{"_index":288,"title":{},"body":{"classes/ForbiddenException.html":{},"guards/RolesGuard.html":{}}}],["constructor(private",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"guards/RolesGuard.html":{}}}],["constructor(reflector",{"_index":314,"title":{},"body":{"guards/RolesGuard.html":{}}}],["consumer",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":280,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["context.gethandler",{"_index":324,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":326,"title":{},"body":{"guards/RolesGuard.html":{}}}],["control",{"_index":153,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller",{"_index":53,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":217,"title":{},"body":{"controllers/CatsController.html":{}}}],["controllers",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["coverage",{"_index":375,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":137,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(cat",{"_index":256,"title":{},"body":{"injectables/CatsService.html":{}}}],["create1",{"_index":139,"title":{},"body":{"controllers/CatsController.html":{}}}],["create1(@body",{"_index":235,"title":{},"body":{"controllers/CatsController.html":{}}}],["create1(createcatdto",{"_index":156,"title":{},"body":{"controllers/CatsController.html":{}}}],["create2",{"_index":140,"title":{},"body":{"controllers/CatsController.html":{}}}],["create2(@body",{"_index":237,"title":{},"body":{"controllers/CatsController.html":{}}}],["create2(createcatdto",{"_index":160,"title":{},"body":{"controllers/CatsController.html":{}}}],["create4",{"_index":141,"title":{},"body":{"controllers/CatsController.html":{}}}],["create4(@body",{"_index":248,"title":{},"body":{"controllers/CatsController.html":{}}}],["create4(createcatdto",{"_index":162,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":157,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["ctx",{"_index":33,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":38,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":36,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["custom",{"_index":244,"title":{},"body":{"controllers/CatsController.html":{}}}],["data",{"_index":306,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["date().toisostring",{"_index":47,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["date.now",{"_index":300,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["declarations",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["decorators",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{}}}],["default",{"_index":259,"title":{},"body":{"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["dependencies",{"_index":70,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":418,"title":{},"body":{"index.html":{}}}],["development",{"_index":427,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":202,"title":{},"body":{"controllers/CatsController.html":{}}}],["e2e",{"_index":438,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":413,"title":{},"body":{"index.html":{}}}],["err",{"_index":342,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":243,"title":{},"body":{"controllers/CatsController.html":{}}}],["errors",{"_index":365,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["errors.length",{"_index":368,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["exception",{"_index":24,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["exception.filter.ts",{"_index":7,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":18,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":41,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["excludenullinterceptor",{"_index":211,"title":{"injectables/ExcludeNullInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ExcludeNullInterceptor.html":{},"coverage.html":{}}}],["executioncontext",{"_index":276,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["export",{"_index":31,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["exports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["express",{"_index":200,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":287,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["failed",{"_index":371,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["findall",{"_index":142,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findall(@req",{"_index":224,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall(request",{"_index":166,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall1",{"_index":143,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall2",{"_index":144,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall3",{"_index":145,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall4",{"_index":146,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall5",{"_index":147,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall6",{"_index":148,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone",{"_index":149,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(@param",{"_index":231,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(params",{"_index":176,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone1",{"_index":150,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone1(@param('id",{"_index":234,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone1(id",{"_index":180,"title":{},"body":{"controllers/CatsController.html":{}}}],["forbiddenexception",{"_index":207,"title":{"classes/ForbiddenException.html":{}},"body":{"controllers/CatsController.html":{},"classes/ForbiddenException.html":{},"coverage.html":{}}}],["forroutes",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["forroutes(catscontroller",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":411,"title":{},"body":{"index.html":{}}}],["function",{"_index":350,"title":{},"body":{"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["functions",{"_index":402,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":177,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('docs",{"_index":226,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('docs')@redirect('https://docs.nestjs.com",{"_index":184,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs",{"_index":151,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs(@query('version",{"_index":228,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs(version",{"_index":183,"title":{},"body":{"controllers/CatsController.html":{}}}],["gethello",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":407,"title":{"index.html":{}},"body":{}}],["grow",{"_index":445,"title":{},"body":{"index.html":{}}}],["guard",{"_index":309,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":310,"title":{},"body":{"guards/RolesGuard.html":{}}}],["handle",{"_index":301,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["header",{"_index":191,"title":{},"body":{"controllers/CatsController.html":{}}}],["header('cache",{"_index":221,"title":{},"body":{"controllers/CatsController.html":{}}}],["hello",{"_index":125,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["here",{"_index":456,"title":{},"body":{"index.html":{}}}],["host",{"_index":15,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":34,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpcode",{"_index":190,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpcode(204",{"_index":220,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpexception",{"_index":28,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexception('forbidden",{"_index":241,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpexceptionfilter",{"_index":100,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpexceptionfilter())@usepipes(new",{"_index":164,"title":{},"body":{"controllers/CatsController.html":{}}}],["https://docs.nestjs/com/v5",{"_index":230,"title":{},"body":{"controllers/CatsController.html":{}}}],["https://nestjs.com",{"_index":463,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":29,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"classes/ForbiddenException.html":{}}}],["httpstatus.forbidden",{"_index":242,"title":{},"body":{"controllers/CatsController.html":{},"classes/ForbiddenException.html":{}}}],["httpstatus.internal_server_error",{"_index":42,"title":{},"body":{"classes/AnyExceptionFilter.html":{}}}],["id",{"_index":182,"title":{},"body":{"controllers/CatsController.html":{}}}],["identifier",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["imports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["injectable",{"_index":121,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["injectables",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"overview.html":{}}}],["installation",{"_index":423,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":425,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":40,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept",{"_index":274,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":275,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":127,"title":{"interfaces/Cat.html":{},"interfaces/Response.html":{}},"body":{"interfaces/Cat.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":129,"title":{},"body":{"interfaces/Cat.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["interfaces/cat.interface",{"_index":206,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["isin",{"_index":271,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isint",{"_index":266,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring",{"_index":268,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["join",{"_index":452,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":460,"title":{},"body":{"index.html":{}}}],["legend",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["license",{"_index":466,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":442,"title":{},"body":{"index.html":{}}}],["logger",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["logginginterceptor",{"_index":107,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["map",{"_index":282,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matchroles",{"_index":313,"title":{},"body":{"guards/RolesGuard.html":{}}}],["matchroles(roles",{"_index":320,"title":{},"body":{"guards/RolesGuard.html":{}}}],["message",{"_index":245,"title":{},"body":{"controllers/CatsController.html":{}}}],["metadata",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":352,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["method",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["middlewareconsumer",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":401,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":441,"title":{},"body":{"index.html":{}}}],["mode",{"_index":431,"title":{},"body":{"index.html":{}}}],["module",{"_index":67,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["modules",{"_index":69,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":455,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":461,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"modules/AppModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/functions.html":{}}}],["ne",{"_index":236,"title":{},"body":{"controllers/CatsController.html":{}}}],["nest",{"_index":419,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":465,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":281,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["nestmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":46,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["next",{"_index":277,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["next.handle().pipe",{"_index":339,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":308,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe(map((value",{"_index":284,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{}}}],["node.js",{"_index":410,"title":{},"body":{"index.html":{}}}],["none",{"_index":154,"title":{},"body":{"controllers/CatsController.html":{}}}],["now",{"_index":299,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":304,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":424,"title":{},"body":{"index.html":{}}}],["null",{"_index":285,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{}}}],["number",{"_index":134,"title":{},"body":{"interfaces/Cat.html":{},"classes/CreateCatDto.html":{},"injectables/ValidatePipe.html":{}}}],["object",{"_index":363,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["observable",{"_index":169,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["of(this.catsservice.findall",{"_index":239,"title":{},"body":{"controllers/CatsController.html":{}}}],["open",{"_index":443,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["overview",{"_index":470,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":390,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":194,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":179,"title":{},"body":{"controllers/CatsController.html":{}}}],["params.id",{"_index":233,"title":{},"body":{"controllers/CatsController.html":{}}}],["path",{"_index":48,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["pipe(tap",{"_index":302,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipetransform",{"_index":358,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["plaintoclass",{"_index":359,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["plaintoclass(metatype",{"_index":364,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["please",{"_index":453,"title":{},"body":{"index.html":{}}}],["post",{"_index":158,"title":{},"body":{"controllers/CatsController.html":{}}}],["post()@httpcode(204)@header('cache",{"_index":152,"title":{},"body":{"controllers/CatsController.html":{}}}],["post()@roles('admin')@usefilters(new",{"_index":163,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":136,"title":{},"body":{"controllers/CatsController.html":{}}}],["private",{"_index":255,"title":{},"body":{"injectables/CatsService.html":{},"guards/RolesGuard.html":{},"injectables/ValidatePipe.html":{}}}],["production",{"_index":433,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":409,"title":{},"body":{"index.html":{}}}],["project",{"_index":444,"title":{},"body":{"index.html":{}}}],["promise",{"_index":171,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["properties",{"_index":131,"title":{},"body":{"interfaces/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"interfaces/Response.html":{}}}],["provide",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["query",{"_index":193,"title":{},"body":{"controllers/CatsController.html":{}}}],["qwert1234",{"_index":293,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["read",{"_index":454,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["redirect",{"_index":192,"title":{},"body":{"controllers/CatsController.html":{}}}],["redirect('https://docs.nestjs.com",{"_index":227,"title":{},"body":{"controllers/CatsController.html":{}}}],["reflect",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":315,"title":{},"body":{"guards/RolesGuard.html":{}}}],["repository",{"_index":422,"title":{},"body":{"index.html":{}}}],["req",{"_index":189,"title":{},"body":{"controllers/CatsController.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":37,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{}}}],["request.url",{"_index":49,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":328,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requestmethod",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.post",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["requesttimeoutexception",{"_index":334,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["res",{"_index":406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["response",{"_index":35,"title":{"interfaces/Response.html":{}},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.status(status).json",{"_index":43,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["result",{"_index":50,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["returns",{"_index":25,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["rimraf",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":209,"title":{},"body":{"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":246,"title":{},"body":{"controllers/CatsController.html":{}}}],["roles.includes(user_roles",{"_index":331,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":105,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["run",{"_index":428,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":201,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":283,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["scalable",{"_index":414,"title":{},"body":{"index.html":{}}}],["server",{"_index":415,"title":{},"body":{"index.html":{}}}],["setmetadata('roles",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":416,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"index.html":{}}}],["sponsors",{"_index":447,"title":{},"body":{"index.html":{}}}],["src/.../logger.middleware.ts",{"_index":404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:42",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":124,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller.ts",{"_index":135,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:101",{"_index":173,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:107",{"_index":174,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:118",{"_index":175,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:126",{"_index":165,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:46",{"_index":155,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:51",{"_index":167,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:58",{"_index":186,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:65",{"_index":178,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:71",{"_index":181,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:76",{"_index":168,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:81",{"_index":170,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:86",{"_index":159,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:91",{"_index":161,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:96",{"_index":172,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":252,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":254,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:12",{"_index":258,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:6",{"_index":261,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:8",{"_index":257,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/create",{"_index":264,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":130,"title":{},"body":{"interfaces/Cat.html":{},"coverage.html":{}}}],["src/common/decorator/roles.decorator.ts",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/exception/forbidden.exception.ts",{"_index":286,"title":{},"body":{"classes/ForbiddenException.html":{},"coverage.html":{}}}],["src/common/exception/forbidden.exception.ts:3",{"_index":289,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["src/common/filter/any",{"_index":6,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"coverage.html":{}}}],["src/common/filter/http",{"_index":291,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/guard/roles.guard.ts",{"_index":311,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guard/roles.guard.ts:19",{"_index":322,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guard/roles.guard.ts:6",{"_index":316,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guard/roles.guard.ts:8",{"_index":318,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/interceptor/exclude.null.interceptor.ts",{"_index":273,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptor/exclude.null.interceptor.ts:12",{"_index":279,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{}}}],["src/common/interceptor/logging.interceptor.ts",{"_index":295,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptor/logging.interceptor.ts:12",{"_index":296,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/interceptor/timeout.interceptor.ts",{"_index":332,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptor/timeout.interceptor.ts:13",{"_index":333,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/common/interceptor/transform.interceptor.ts",{"_index":305,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptor/transform.interceptor.ts:16",{"_index":345,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/common/middleware/logger.middleware.ts",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/pipe/validate.pipe.ts",{"_index":346,"title":{},"body":{"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["src/common/pipe/validate.pipe.ts:12",{"_index":356,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["src/common/pipe/validate.pipe.ts:25",{"_index":351,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["src/main.ts",{"_index":387,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":429,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":432,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":434,"title":{},"body":{"index.html":{}}}],["started",{"_index":408,"title":{"index.html":{}},"body":{}}],["starter",{"_index":421,"title":{},"body":{"index.html":{}}}],["statements",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":39,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":44,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":457,"title":{},"body":{"index.html":{}}}],["string",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"guards/RolesGuard.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/variables.html":{}}}],["super('forbidden",{"_index":290,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["support",{"_index":448,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":468,"title":{},"body":{"modules.html":{}}}],["t",{"_index":307,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":297,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["test",{"_index":437,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":440,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":439,"title":{},"body":{"index.html":{}}}],["tests",{"_index":436,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":446,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cats",{"_index":263,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":262,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":238,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.matchroles(roles",{"_index":329,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.reflector.get('roles",{"_index":323,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.tovalidate(metatype",{"_index":362,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["throw",{"_index":240,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ValidatePipe.html":{}}}],["throwerror",{"_index":336,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":344,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":343,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout",{"_index":337,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(5000",{"_index":340,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":335,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":215,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timestamp",{"_index":45,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["touch",{"_index":458,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":347,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["tovalidate(metatype",{"_index":349,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["transform",{"_index":348,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["transform(value",{"_index":353,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["transformer",{"_index":360,"title":{},"body":{"injectables/ValidatePipe.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":213,"title":{"injectables/TransformInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":325,"title":{},"body":{"guards/RolesGuard.html":{}}}],["twitter",{"_index":464,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"modules/AppModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["types",{"_index":372,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["types.includes(metatype",{"_index":374,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["typescript",{"_index":420,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":354,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["unit",{"_index":435,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":14,"title":{},"body":{"classes/AnyExceptionFilter.html":{}}}],["url",{"_index":188,"title":{},"body":{"controllers/CatsController.html":{}}}],["url，可以使用@redirect",{"_index":225,"title":{},"body":{"controllers/CatsController.html":{}}}],["useclass",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["usefilters",{"_index":196,"title":{},"body":{"controllers/CatsController.html":{}}}],["usefilters(new",{"_index":219,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards",{"_index":198,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors",{"_index":199,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(new",{"_index":218,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes",{"_index":197,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes(new",{"_index":247,"title":{},"body":{"controllers/CatsController.html":{}}}],["user",{"_index":327,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.roles",{"_index":330,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user_roles",{"_index":321,"title":{},"body":{"guards/RolesGuard.html":{}}}],["validate",{"_index":361,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["validate(object",{"_index":367,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["validatepipe",{"_index":103,"title":{"injectables/ValidatePipe.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["validator",{"_index":272,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/ValidatePipe.html":{},"dependencies.html":{}}}],["value",{"_index":260,"title":{},"body":{"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":475,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":187,"title":{},"body":{"controllers/CatsController.html":{}}}],["void",{"_index":26,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{}}}],["watch",{"_index":430,"title":{},"body":{"index.html":{}}}],["website",{"_index":462,"title":{},"body":{"index.html":{}}}],["world",{"_index":126,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":451,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AnyExceptionFilter.html":{"url":"classes/AnyExceptionFilter.html","title":"class - AnyExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnyExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filter/any-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filter/any-exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\n\n@Catch()\nexport class AnyExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CatsModule } from './cats/cats.module';\nimport { logger } from './common/middleware/logger.middleware';\nimport { CatsController } from './cats/cats.controller';\nimport { APP_FILTER } from '@nestjs/core';\nimport { HttpExceptionFilter } from './common/filter/http-exception.filter';\nimport { ValidatePipe } from './common/pipe/validate.pipe';\nimport { RolesGuard } from './common/guard/roles.guard';\nimport { LoggingInterceptor } from './common/interceptor/logging.interceptor';\n\n@Module({\n  imports: [CatsModule],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_FILTER,\n      useClass: HttpExceptionFilter,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: ValidatePipe,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: RolesGuard,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: LoggingInterceptor,\n    },\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): any {\n    consumer\n      // .apply(cors(), helmet(), logger)\n      .apply(logger)\n      .exclude(\n        { path: 'cats', method: RequestMethod.GET },\n        { path: 'cats', method: RequestMethod.POST },\n        'cats/(.*)',\n      )\n      .forRoutes(CatsController);\n    // .forRoutes({ path: 'cats', method: RequestMethod.GET });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cat.html":{"url":"interfaces/Cat.html","title":"interface - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/interfaces/cat.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        breed\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Cat {\n  name: string;\n  age: number;\n  breed: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                create1\n                            \n                            \n                                    Async\n                                create2\n                            \n                            \n                                    Async\n                                create4\n                            \n                            \n                                findAll\n                            \n                            \n                                findAll1\n                            \n                            \n                                    Async\n                                findAll2\n                            \n                            \n                                findAll3\n                            \n                            \n                                findAll4\n                            \n                            \n                                    Async\n                                findAll5\n                            \n                            \n                                findAll6\n                            \n                            \n                                findOne\n                            \n                            \n                                findOne1\n                            \n                            \n                                getDocs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(204)@Header('Cache-Control', 'none')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create1\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create1(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create2\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create2(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create4\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create4(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles('admin')@UseFilters(new HttpExceptionFilter())@UsePipes(new ValidatePipe())\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll1\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll1()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll2\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll2()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll3\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll3()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll4\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll4()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll5\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll5()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll6\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll6()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne1\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne1(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDocs\n                        \n                        \n                    \n                \n            \n            \n                \ngetDocs(version)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('docs')@Redirect('https://docs.nestjs.com', 302)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { url: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Req,\n  Post,\n  HttpCode,\n  Header,\n  Redirect,\n  Query,\n  Param,\n  Body,\n  HttpException,\n  HttpStatus,\n  UseFilters,\n  UsePipes,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Observable, of } from 'rxjs';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { CatsService } from './cats.service';\nimport { Cat } from './interfaces/cat.interface';\nimport { ForbiddenException } from '../common/exception/forbidden.exception';\nimport { HttpExceptionFilter } from '../common/filter/http-exception.filter';\nimport { ValidatePipe } from '../common/pipe/validate.pipe';\n// import { RolesGuard } from '../common/guard/roles.guard';\nimport { Roles } from '../common/decorator/roles.decorator';\nimport { LoggingInterceptor } from '../common/interceptor/logging.interceptor';\nimport { ExcludeNullInterceptor } from '../common/interceptor/exclude.null.interceptor';\nimport { TransformInterceptor } from '../common/interceptor/transform.interceptor';\nimport { TimeoutInterceptor } from '../common/interceptor/timeout.interceptor';\n\n@Controller('cats') // 装饰器指定路径前缀\n@UseInterceptors(new LoggingInterceptor()) // 拦截器\n@UseFilters(new HttpExceptionFilter()) // 控制器作用域\n@UseInterceptors(new ExcludeNullInterceptor()) // 拦截器\n@UseInterceptors(new TransformInterceptor()) // 拦截器\n@UseInterceptors(new TimeoutInterceptor()) // 拦截器\nexport class CatsController {\n  constructor(private catsService: CatsService) {}\n\n  @Post()\n  @HttpCode(204)\n  @Header('Cache-Control', 'none')\n  create(): string {\n    return ' This action adds a new cat';\n  }\n\n  @Get()\n  findAll(@Req() request: Request): string {\n    return 'This action returns all cats';\n  }\n\n  // 要将相应重定向到特定的URL，可以使用@Redirect 装饰器或特定于库的相应对象\n  @Get('docs')\n  @Redirect('https://docs.nestjs.com', 302)\n  getDocs(@Query('version') version) {\n    if (version && version === '5') {\n      return { url: 'https://docs.nestjs/com/v5/' };\n    }\n  }\n\n  @Get(':id')\n  findOne(@Param() params): string {\n    console.log(params.id);\n    return `This action returns a #${params.id} cat`;\n  }\n\n  @Get(':id')\n  findOne1(@Param('id') id): string {\n    return `This action returns a #${id} cat`;\n  }\n\n  @Get()\n  findAll1(): Observable {\n    return of([]);\n  }\n\n  @Get()\n  async findAll2(): Promise {\n    return [];\n  }\n\n  @Post()\n  async create1(@Body() createCatDto: CreateCatDto) {\n    return 'This action adds a ne cat';\n  }\n\n  @Post()\n  async create2(@Body() createCatDto: CreateCatDto) {\n    this.catsService.create(createCatDto);\n  }\n\n  @Get()\n  findAll3(): Observable {\n    return of(this.catsService.findAll());\n  }\n\n  @Get()\n  findAll4() {\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n\n  // 覆盖整个相应正文的实例\n  @Get()\n  async findAll5() {\n    throw new HttpException(\n      {\n        status: HttpStatus.FORBIDDEN,\n        error: 'This is a custom message',\n      },\n      HttpStatus.FORBIDDEN,\n    );\n  }\n\n  @Get()\n  findAll6() {\n    throw new ForbiddenException();\n  }\n\n  @Post()\n  @Roles('admin')\n  @UseFilters(new HttpExceptionFilter())\n  @UsePipes(new ValidatePipe())\n  async create4(@Body() createCatDto: CreateCatDto) {\n    throw new ForbiddenException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsService } from './cats.service';\nimport { CatsController } from './cats.controller';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n  exports: [CatsService],\n})\nexport class CatsModule {\n  constructor(private readonly catsService: CatsService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(cat: Cat)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                Cat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Cat[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cat[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cats.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cat } from './interfaces/cat.interface';\n\n@Injectable()\nexport class CatsService {\n  private readonly cats: Cat[] = [];\n\n  create(cat: Cat) {\n    this.cats.push(cat);\n  }\n\n  findAll(): Cat[] {\n    return this.cats;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt, IsIn } from 'class-validator';\n\nexport class CreateCatDto {\n  @IsString()\n  readonly name: string;\n\n  @IsInt()\n  readonly age: number;\n\n  @IsString()\n  readonly breed: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExcludeNullInterceptor.html":{"url":"injectables/ExcludeNullInterceptor.html","title":"injectable - ExcludeNullInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExcludeNullInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/exclude.null.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptor/exclude.null.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ExcludeNullInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    return next.handle().pipe(map((value) => (value === null ? '' : value)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenException.html":{"url":"classes/ForbiddenException.html","title":"class - ForbiddenException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exception/forbidden.exception.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/exception/forbidden.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class ForbiddenException extends HttpException {\n  constructor() {\n    super('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filter/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filter/http-exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    // qwert1234! 1044\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/logging.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptor/logging.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable {\n    console.log('Before....');\n\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(tap(() => console.log(`After...${Date.now() - now}ms`)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/transform.interceptor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response {\n  data: T;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> | Promise>> {\n    return next.handle().pipe(map((data) => ({ data })));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guard/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                matchRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guard/roles.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guard/roles.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchRoles(roles: string[], user_roles: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guard/roles.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user_roles\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, Injectable, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    return this.matchRoles(roles, user.roles);\n  }\n  private matchRoles(roles: string[], user_roles: string) {\n    return roles.includes(user_roles);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/timeout.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptor/timeout.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Observable, TimeoutError, throwError } from 'rxjs';\nimport { timeout, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    return next.handle().pipe(\n      timeout(5000),\n      catchError((err) => {\n        if (err instanceof TimeoutError) {\n          return throwError(new RequestTimeoutException());\n        }\n        return throwError(err);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/transform.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptor/transform.interceptor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response {\n  data: T;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> | Promise>> {\n    return next.handle().pipe(map((data) => ({ data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidatePipe.html":{"url":"injectables/ValidatePipe.html","title":"injectable - ValidatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipe/validate.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipe/validate.pipe.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipe/validate.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\nimport { validate } from 'class-validator';\n\n@Injectable()\nexport class ValidatePipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype: Function): boolean {\n    const types: Function[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            Cat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/decorator/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/exception/forbidden.exception.ts\n            \n            class\n            ForbiddenException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filter/any-exception.filter.ts\n            \n            class\n            AnyExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filter/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guard/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/interceptor/exclude.null.interceptor.ts\n            \n            injectable\n            ExcludeNullInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptor/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptor/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptor/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/middleware/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/pipe/validate.pipe.ts\n            \n            injectable\n            ValidatePipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.13.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/middleware/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            logger\n                        \n                        \n                    \n                \n            \n            \n                \nlogger(req, res, next)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorator/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
