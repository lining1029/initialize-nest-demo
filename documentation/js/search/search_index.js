var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AnyExceptionFilter.html",[0,0.059,1,2.119]],["body/classes/AnyExceptionFilter.html",[0,0.058,1,2.849,2,1.453,3,0.386,4,0.332,5,0.332,6,3.318,7,2.085,8,1.317,9,3.779,10,0.332,11,1.074,12,4.061,13,3.318,14,4.59,15,3.779,16,4.061,17,0.566,18,2.428,19,0.871,20,0.039,21,0.634,22,0.503,23,0.871,24,3.318,25,0.786,26,2.085,27,0.386,28,2.498,29,2.085,30,0.443,31,0.386,32,1.973,33,2.428,34,2.428,35,1.453,36,2.428,37,1.829,38,2.428,39,2.849,40,2.428,41,2.428,42,2.95,43,2.428,44,2.428,45,2.428,46,1.453,47,2.428,48,2.085,49,2.428,50,0.019,51,0.026,52,0.019]],["title/controllers/AppController.html",[53,1.65,54,1.858]],["body/controllers/AppController.html",[0,0.071,3,0.468,4,0.403,5,0.403,10,0.403,11,1.22,17,0.687,20,0.039,25,0.953,27,0.599,30,0.536,31,0.468,50,0.023,51,0.03,52,0.023,53,2.52,54,2.837,55,1.968,56,2.944,57,4.382,58,2.216,59,3.575,60,1.83,61,2.487,62,2.944,63,2.216,64,2.527,65,0.953,66,3.575]],["title/modules/AppModule.html",[67,1.329,68,1.858]],["body/modules/AppModule.html",[0,0.057,3,0.246,4,0.212,5,0.212,8,0.615,20,0.04,27,0.694,30,0.282,31,0.38,48,2.507,50,0.012,51,0.019,52,0.012,54,2.198,55,1.599,61,2.243,62,1.549,67,1.572,68,3.118,69,1.036,70,1.036,71,1.33,72,1.33,73,1.036,74,2.507,75,1.33,76,1.549,77,1.549,78,1.549,79,2.506,80,2.053,81,1.33,82,1.33,83,1.882,84,2.391,85,2.904,86,2.904,87,1.882,88,1.882,89,1.882,90,2.053,91,1.882,92,1.036,93,1.882,94,4.308,95,1.33,96,1.599,97,1.549,98,1.549,99,1.599,100,1.549,101,1.599,102,1.549,103,1.599,104,1.549,105,1.549,106,1.036,107,1.882,108,3.987,109,3.987,110,1.882,111,1.882,112,1.882,113,1.882,114,1.882,115,1.882,116,3.282,117,3.546,118,2.904,119,1.882,120,1.882,121,1.882]],["title/injectables/AppService.html",[61,1.477,122,0.45]],["body/injectables/AppService.html",[0,0.075,3,0.496,4,0.427,5,0.427,10,0.427,11,1.266,17,0.728,20,0.038,25,1.01,27,0.496,30,0.569,31,0.496,50,0.025,51,0.031,52,0.025,57,4.477,60,1.899,61,2.34,65,1.01,122,0.713,123,1.516,124,3.121,125,3.791,126,3.791,127,3.791]],["title/classes/Cat.html",[0,0.059,128,1.477]],["body/classes/Cat.html",[0,0.055,2,1.382,3,0.367,4,0.316,5,0.316,10,0.316,17,0.927,20,0.039,21,0.962,22,0.865,27,0.509,31,0.585,32,1.122,50,0.018,51,0.025,52,0.018,58,2.994,60,2.1,106,1.545,128,2.203,129,1.739,130,3.206,131,4.83,132,2.752,133,3.681,134,3.681,135,4.472,136,2.752,137,5.251,138,2.806,139,2.806,140,2.806,141,3.206,142,2.806,143,2.806,144,2.806,145,3.206,146,2.806,147,1.983,148,1.983,149,2.806,150,2.806,151,1.739,152,2.31]],["title/controllers/CatsController.html",[53,1.65,92,1.65]],["body/controllers/CatsController.html",[0,0.023,3,0.153,4,0.131,5,0.131,10,0.131,11,0.525,17,0.817,19,0.582,20,0.04,21,0.424,22,0.199,23,0.582,25,1.236,26,1.394,27,0.641,28,1.222,29,0.825,30,0.175,31,0.153,37,1.587,39,0.825,46,1.658,50,0.008,51,0.013,52,0.008,53,0.642,55,0.642,58,2.638,60,1.46,63,0.723,65,1.134,92,1.085,96,1.41,97,0.961,98,0.961,99,1.085,100,0.961,101,0.642,102,0.961,103,1.085,104,0.961,116,1.623,128,1.262,153,0.961,154,1.167,155,2.478,156,3.2,157,1.972,158,3.01,159,3.01,160,3.01,161,3.01,162,3.01,163,3.01,164,1.972,165,1.167,166,1.972,167,1.972,168,1.167,169,1.167,170,2.422,171,3.651,172,1.167,173,1.167,174,1.135,175,1.167,176,1.334,177,1.167,178,1.167,179,1.167,180,1.167,181,1.167,182,1.167,183,1.972,184,1.167,185,3.01,186,1.972,187,0.961,188,1.167,189,1.167,190,1.167,191,1.167,192,1.167,193,1.167,194,1.167,195,1.167,196,1.167,197,1.167,198,0.825,199,0.467,200,0.961,201,0.961,202,1.262,203,0.961,204,1.167,205,1.587,206,1.167,207,0.723,208,1.167,209,1.222,210,1.167,211,1.085,212,1.167,213,1.222,214,1.167,215,1.167,216,3.01,217,1.972,218,1.167,219,1.167,220,3.364,221,1.972,222,1.167,223,1.167,224,1.167,225,1.167,226,1.167,227,0.961,228,1.167,229,1.972,230,1.167,231,1.167,232,1.167,233,1.167,234,1.167,235,1.167,236,1.972,237,1.167,238,1.167,239,1.167,240,1.167,241,1.167,242,1.167,243,1.167,244,2.478,245,1.167,246,2.108,247,1.167,248,1.167,249,1.167,250,1.167,251,1.167,252,1.167]],["title/modules/CatsModule.html",[67,1.329,79,1.65]],["body/modules/CatsModule.html",[0,0.053,3,0.351,4,0.302,5,0.302,20,0.039,21,0.578,27,0.653,30,0.403,31,0.351,32,1.074,50,0.017,51,0.024,52,0.017,55,2.079,63,1.665,64,1.899,65,0.716,67,1.936,69,1.479,70,1.479,71,1.899,72,1.899,73,1.479,74,3.087,75,3.087,79,2.928,80,2.67,81,1.899,82,1.899,84,2.211,92,2.404,105,2.211,106,1.479,128,1.323,145,3.109,151,2.341,202,2.854,203,2.211,253,2.211,254,2.211,255,2.211,256,2.686,257,2.686,258,2.211,259,2.686,260,2.686,261,2.686,262,2.686,263,2.686,264,2.686,265,2.686]],["title/injectables/CatsService.html",[122,0.45,202,1.477]],["body/injectables/CatsService.html",[0,0.054,3,0.355,4,0.306,5,0.306,10,0.306,11,1.015,17,0.844,19,1.124,20,0.039,21,0.819,22,0.649,23,1.124,25,1.015,27,0.656,30,0.408,31,0.355,32,1.087,46,1.339,50,0.018,51,0.025,52,0.018,65,1.015,106,1.496,122,0.571,123,1.087,128,1.339,147,1.921,148,1.921,155,3.135,156,3.674,170,2.761,176,2.111,200,2.237,201,2.237,202,1.876,258,2.237,266,2.237,267,4.763,268,1.921,269,2.718,270,4.763,271,2.718,272,3.808,273,3.808,274,2.718,275,2.718,276,2.718,277,2.718,278,1.921,279,2.718,280,2.718,281,2.718,282,2.718]],["title/classes/CreateCatDto.html",[0,0.059,170,1.65]],["body/classes/CreateCatDto.html",[0,0.083,2,1.539,3,0.408,4,0.352,5,0.352,10,0.352,17,0.908,20,0.038,21,1.017,22,0.805,27,0.408,31,0.408,50,0.02,51,0.027,52,0.02,58,2.93,60,2.02,64,4.031,132,2.961,133,3.891,134,3.891,136,2.961,170,2.306,283,4.158,284,2.571,285,4.726,286,3.123,287,5.267,288,3.123,289,3.123,290,3.123,291,2.207]],["title/injectables/ExcludeNullInterceptor.html",[122,0.45,209,1.858]],["body/injectables/ExcludeNullInterceptor.html",[0,0.061,3,0.401,4,0.345,5,0.345,8,1.002,10,0.345,11,1.103,17,0.589,19,0.906,20,0.039,21,0.66,22,0.523,23,0.906,25,0.817,27,0.613,30,0.46,31,0.401,50,0.02,51,0.027,52,0.02,65,0.817,122,0.621,123,1.227,174,2.076,176,1.834,199,1.227,209,2.566,292,2.525,293,2.578,294,1.902,295,2.47,296,2.308,297,2.76,298,3.068,299,2.039,300,2.278,301,2.168,302,1.689,303,3.068,304,2.925,305,3.068]],["title/classes/ForbiddenException.html",[0,0.059,205,1.858]],["body/classes/ForbiddenException.html",[0,0.077,2,1.921,3,0.51,4,0.439,5,0.439,17,0.748,20,0.038,27,0.51,28,3.257,29,2.755,30,0.585,31,0.51,50,0.025,51,0.031,52,0.025,130,3.979,205,2.996,246,3.209,268,3.713,306,3.209,307,3.898,308,3.898]],["title/classes/HttpExceptionFilter.html",[0,0.059,96,1.65]],["body/classes/HttpExceptionFilter.html",[0,0.058,2,1.453,3,0.386,4,0.332,5,0.332,7,2.085,8,1.317,9,3.779,10,0.332,11,1.074,12,3.779,13,3.318,15,3.779,16,4.061,17,0.566,18,2.428,19,0.871,20,0.039,21,0.634,22,0.503,23,0.871,24,2.428,25,0.786,26,2.085,27,0.527,28,3.058,30,0.443,31,0.386,32,1.973,33,2.428,34,2.428,35,1.985,36,2.428,37,2.498,38,2.428,39,2.849,41,2.428,43,2.428,44,2.428,45,2.428,46,1.453,47,2.428,48,2.085,49,2.428,50,0.019,51,0.026,52,0.019,96,2.218,198,2.085,309,3.318,310,2.95]],["title/injectables/LoggingInterceptor.html",[103,1.65,122,0.45]],["body/injectables/LoggingInterceptor.html",[0,0.061,3,0.405,4,0.348,5,0.348,8,1.011,10,0.348,11,1.109,17,0.594,19,0.914,20,0.039,21,0.666,22,0.527,23,0.914,25,0.825,27,0.615,30,0.464,31,0.405,32,1.238,50,0.02,51,0.027,52,0.02,65,0.825,103,2.292,122,0.625,123,1.238,174,2.085,199,1.238,293,2.59,294,1.919,295,2.479,296,2.479,297,2.77,299,2.051,300,2.292,302,1.704,311,2.548,312,3.095,313,3.095,314,3.095,315,3.095,316,3.095,317,3.095,318,3.095,319,3.095,320,3.095]],["title/interfaces/Response.html",[35,1.477,321,1.858]],["body/interfaces/Response.html",[0,0.064,3,0.424,4,0.365,5,0.365,8,1.059,10,0.365,20,0.039,22,0.552,27,0.63,30,0.486,31,0.562,35,2.115,50,0.021,51,0.028,52,0.021,65,0.863,122,0.644,132,3.034,174,1.902,176,1.436,199,1.296,211,1.784,293,1.784,295,2.115,296,1.596,297,2.363,299,1.596,300,2.363,301,2.29,302,1.784,321,2.009,322,2.667,323,2.29,324,4.39,325,3.963,326,2.667]],["title/guards/RolesGuard.html",[101,1.65,327,2.119]],["body/guards/RolesGuard.html",[0,0.049,3,0.324,4,0.279,5,0.279,8,0.809,10,0.279,11,0.949,17,0.802,19,1.233,20,0.039,21,0.898,22,0.711,23,1.233,25,0.949,27,0.546,30,0.371,31,0.324,32,1.669,37,1.534,50,0.016,51,0.023,52,0.016,60,2.015,63,1.534,65,1.112,95,1.749,101,1.961,122,0.534,141,2.037,174,1.85,176,1.579,199,0.989,207,2.588,268,1.749,278,2.951,295,2.25,299,1.755,328,2.474,329,2.037,330,4.839,331,3.563,332,2.474,333,5.04,334,2.474,335,2.474,336,2.474,337,2.933,338,3.563,339,4.174,340,2.474,341,2.474,342,2.474,343,2.474,344,2.474,345,2.474,346,2.474,347,2.474,348,2.474]],["title/injectables/TimeoutInterceptor.html",[122,0.45,213,1.858]],["body/injectables/TimeoutInterceptor.html",[0,0.058,3,0.381,4,0.328,5,0.328,8,0.952,10,0.328,11,1.064,17,0.559,19,0.86,20,0.039,21,0.626,22,0.496,23,0.86,25,0.776,27,0.596,30,0.437,31,0.381,40,2.398,50,0.019,51,0.026,52,0.019,65,1.215,122,0.599,123,1.165,174,2.021,176,1.77,199,1.165,213,2.477,293,2.51,294,1.805,295,2.418,296,2.247,297,2.701,299,1.968,300,2.199,302,1.603,349,2.398,350,2.912,351,3.995,352,3.995,353,2.912,354,2.912,355,2.912,356,2.912,357,2.912,358,2.912,359,2.912,360,2.912,361,2.912]],["title/injectables/TransformInterceptor.html",[122,0.45,211,1.65]],["body/injectables/TransformInterceptor.html",[0,0.06,3,0.396,4,0.341,5,0.341,8,0.989,10,0.341,11,1.093,17,0.581,19,0.894,20,0.039,21,0.651,22,0.516,23,0.894,25,0.807,27,0.609,30,0.454,31,0.537,35,1.491,50,0.02,51,0.027,52,0.02,65,0.807,122,0.615,123,1.21,174,2.062,176,1.818,199,1.21,211,2.258,293,2.561,294,1.877,295,2.457,296,2.292,297,2.745,299,2.021,300,2.258,301,2.14,302,1.666,321,1.877,323,2.14,324,3.377,325,2.492,326,2.492,362,3.027]],["title/injectables/ValidatePipe.html",[99,1.65,122,0.45]],["body/injectables/ValidatePipe.html",[0,0.083,3,0.33,4,0.284,5,0.284,8,0.823,10,0.284,11,0.962,17,0.693,19,1.066,20,0.039,21,0.776,22,0.615,23,1.066,25,0.962,27,0.552,30,0.378,31,0.33,32,1.686,46,1.241,50,0.016,51,0.023,52,0.016,60,1.007,65,1.124,99,1.987,122,0.541,123,1.007,136,1.781,156,2.981,244,2.074,278,2.981,291,1.781,304,3.255,337,3.472,363,2.074,364,3.609,365,3.609,366,3.609,367,3.791,368,2.52,369,4.217,370,3.609,371,2.52,372,4.605,373,2.52,374,2.52,375,3.609,376,2.52,377,2.074,378,2.52,379,2.52,380,3.609,381,2.52,382,2.52,383,2.52,384,2.52,385,2.52,386,2.074,387,2.52,388,2.52,389,2.52,390,2.52,391,2.52]],["title/coverage.html",[392,2.88]],["body/coverage.html",[0,0.094,1,1.677,5,0.267,6,1.953,7,2.443,20,0.038,22,0.404,35,1.169,46,1.169,50,0.015,51,0.022,52,0.015,53,1.902,54,1.471,56,1.953,61,1.169,67,1.051,73,1.306,90,1.677,92,1.306,96,1.306,99,1.306,101,1.306,103,1.306,122,0.769,124,1.953,128,1.703,129,2.142,151,1.471,153,1.953,170,1.306,202,1.169,205,1.471,207,1.471,209,1.471,211,1.306,213,1.471,266,1.953,283,1.953,284,1.953,292,1.953,306,1.953,309,1.953,311,1.953,321,2.142,323,2.443,327,1.677,329,1.953,349,1.953,363,1.953,367,2.845,386,4.864,392,1.677,393,2.372,394,2.372,395,2.372,396,5.444,397,2.372,398,4.478,399,2.372,400,2.372,401,4.076,402,4.759,403,1.953,404,1.953,405,2.372,406,2.443,407,2.372,408,2.372]],["title/dependencies.html",[70,1.982,409,2.512]],["body/dependencies.html",[0,0.094,20,0.039,30,0.569,50,0.025,51,0.031,52,0.025,70,2.087,95,2.68,106,2.087,147,2.68,198,2.68,199,1.516,291,2.68,377,3.121,410,5.188,411,3.791,412,3.791,413,3.791,414,3.791,415,3.791,416,3.791,417,3.791,418,3.791,419,3.791,420,3.791,421,3.791]],["title/miscellaneous/functions.html",[422,1.238,423,2.965]],["body/miscellaneous/functions.html",[10,0.46,19,1.205,20,0.035,21,0.878,23,1.205,50,0.026,51,0.032,52,0.026,73,2.952,90,3.515,187,3.361,296,2.45,404,3.361,406,2.886,422,2.011,423,3.361,424,3.361,425,4.082,426,4.082,427,4.972]],["title/index.html",[10,0.283,428,2.512,429,2.512]],["body/index.html",[4,0.325,20,0.038,50,0.019,51,0.026,52,0.019,392,2.041,430,2.888,431,2.888,432,3.972,433,2.888,434,2.888,435,2.888,436,2.888,437,2.888,438,2.888,439,2.888,440,4.54,441,2.888,442,2.888,443,2.888,444,2.888,445,5.427,446,2.888,447,2.888,448,2.888,449,5.298,450,2.888,451,2.888,452,3.972,453,2.888,454,2.888,455,2.888,456,2.888,457,3.972,458,3.972,459,2.888,460,2.888,461,2.888,462,3.972,463,3.972,464,2.888,465,2.888,466,2.888,467,2.888,468,2.888,469,2.378,470,2.888,471,2.888,472,2.888,473,2.888,474,2.888,475,2.888,476,2.888,477,2.888,478,2.888,479,2.888,480,2.888,481,2.888,482,2.888,483,2.888,484,2.888,485,2.888,486,2.888,487,2.888]],["title/modules.html",[69,2.243]],["body/modules.html",[20,0.033,50,0.028,51,0.033,52,0.028,68,2.707,69,2.403,79,2.403,469,4.262,488,5.177,489,5.177,490,5.177]],["title/overview.html",[491,3.355]],["body/overview.html",[2,1.675,20,0.036,50,0.022,51,0.029,52,0.022,55,1.871,61,2.428,67,1.507,68,3.442,69,1.871,70,1.871,71,2.403,72,2.403,73,1.871,74,2.403,75,2.403,76,2.799,77,2.799,78,2.799,79,3.057,80,3.132,81,2.403,82,2.403,123,1.359,202,2.786,227,2.799,253,2.799,254,2.799,255,2.799,322,2.799,327,2.403,491,2.799,492,4.929,493,3.4,494,3.4]],["title/miscellaneous/typealiases.html",[422,1.238,495,3.601]],["body/miscellaneous/typealiases.html",[10,0.501,20,0.034,22,0.758,50,0.029,51,0.034,52,0.029,129,2.759,148,3.701,422,2.193,496,4.45,497,3.664]],["title/miscellaneous/variables.html",[422,1.238,498,2.965]],["body/miscellaneous/variables.html",[10,0.441,20,0.037,22,0.668,50,0.025,51,0.031,52,0.025,60,1.568,67,2.149,129,2.43,151,3.007,152,3.227,207,3.411,304,3.428,403,3.227,406,2.771,422,1.931,424,3.227,497,3.227,498,3.227,499,3.92,500,4.85,501,3.92]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":386,"title":{},"body":{"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":494,"title":{},"body":{"overview.html":{}}}],["2",{"_index":492,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":183,"title":{},"body":{"controllers/CatsController.html":{}}}],["5",{"_index":227,"title":{},"body":{"controllers/CatsController.html":{},"overview.html":{}}}],["5.11.12",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":493,"title":{},"body":{"overview.html":{}}}],["7.2.2",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":220,"title":{},"body":{"controllers/CatsController.html":{}}}],["adds",{"_index":221,"title":{},"body":{"controllers/CatsController.html":{}}}],["age",{"_index":133,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}}}],["aliases",{"_index":496,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":470,"title":{},"body":{"index.html":{}}}],["anyexceptionfilter",{"_index":1,"title":{"classes/AnyExceptionFilter.html":{}},"body":{"classes/AnyExceptionFilter.html":{},"coverage.html":{}}}],["app",{"_index":447,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":54,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":438,"title":{},"body":{"index.html":{}}}],["apply(cors",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["apply(logger",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":68,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":61,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":372,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["argumentshost",{"_index":16,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":390,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["async",{"_index":156,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ValidatePipe.html":{}}}],["author",{"_index":480,"title":{},"body":{"index.html":{}}}],["await",{"_index":383,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["backers",{"_index":471,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":374,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["badrequestexception('validation",{"_index":387,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["body",{"_index":193,"title":{},"body":{"controllers/CatsController.html":{}}}],["boolean",{"_index":337,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/ValidatePipe.html":{}}}],["bootstrap",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":134,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}}}],["browse",{"_index":490,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":488,"title":{},"body":{"modules.html":{}}}],["building",{"_index":433,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":297,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":330,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":335,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cat",{"_index":128,"title":{"classes/Cat.html":{}},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat.dto",{"_index":201,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cat.dto.ts",{"_index":284,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:11",{"_index":288,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:5",{"_index":289,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:8",{"_index":286,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.name",{"_index":260,"title":{},"body":{"modules/CatsModule.html":{}}}],["cat11",{"_index":234,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat44",{"_index":237,"title":{},"body":{"controllers/CatsController.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":13,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":310,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":355,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":358,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catdocument",{"_index":148,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"miscellaneous/typealiases.html":{}}}],["catmodel",{"_index":272,"title":{},"body":{"injectables/CatsService.html":{}}}],["cats",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["cats.controller",{"_index":257,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":203,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.controller",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":92,"title":{"controllers/CatsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":79,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsschema",{"_index":151,"title":{},"body":{"classes/Cat.html":{},"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["catsservice",{"_index":202,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":0,"title":{"classes/AnyExceptionFilter.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{}},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":253,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":255,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":254,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["common/decorator/roles.decorator",{"_index":208,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/exception/forbidden.exception",{"_index":206,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/filter/http",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["common/guard/roles.guard",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["common/interceptor/exclude.null.interceptor",{"_index":210,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/interceptor/logging.interceptor",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["common/interceptor/timeout.interceptor",{"_index":214,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/interceptor/transform.interceptor",{"_index":212,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/middleware/logger.middleware",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["common/pipe/validate.pipe",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["configure(consumer",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('before",{"_index":314,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log('hello",{"_index":263,"title":{},"body":{"modules/CatsModule.html":{}}}],["console.log(`after...${date.now",{"_index":319,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(params.id",{"_index":232,"title":{},"body":{"controllers/CatsController.html":{}}}],["const",{"_index":32,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/Cat.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/ValidatePipe.html":{}}}],["constructor",{"_index":268,"title":{},"body":{"injectables/CatsService.html":{},"classes/ForbiddenException.html":{},"guards/RolesGuard.html":{}}}],["constructor(@injectmodel('cat",{"_index":277,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(catmodel",{"_index":269,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(private",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"guards/RolesGuard.html":{}}}],["constructor(reflector",{"_index":332,"title":{},"body":{"guards/RolesGuard.html":{}}}],["consumer",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":299,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["context.gethandler",{"_index":342,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":343,"title":{},"body":{"guards/RolesGuard.html":{}}}],["control",{"_index":166,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller",{"_index":53,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":215,"title":{},"body":{"controllers/CatsController.html":{}}}],["controllers",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["coverage",{"_index":392,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":155,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":273,"title":{},"body":{"injectables/CatsService.html":{}}}],["create1",{"_index":157,"title":{},"body":{"controllers/CatsController.html":{}}}],["create1(@body",{"_index":239,"title":{},"body":{"controllers/CatsController.html":{}}}],["create1(createcatdto",{"_index":169,"title":{},"body":{"controllers/CatsController.html":{}}}],["create2(@body",{"_index":241,"title":{},"body":{"controllers/CatsController.html":{}}}],["create4(@body",{"_index":252,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":170,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["createdcat",{"_index":279,"title":{},"body":{"injectables/CatsService.html":{}}}],["createdcat.save",{"_index":281,"title":{},"body":{"injectables/CatsService.html":{}}}],["ctx",{"_index":33,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":38,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":36,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["custom",{"_index":248,"title":{},"body":{"controllers/CatsController.html":{}}}],["data",{"_index":324,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["date().toisostring",{"_index":47,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["date.now",{"_index":316,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["declarations",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["decorators",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{}}}],["default",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["dependencies",{"_index":70,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":439,"title":{},"body":{"index.html":{}}}],["development",{"_index":448,"title":{},"body":{"index.html":{}}}],["document",{"_index":131,"title":{},"body":{"classes/Cat.html":{}}}],["documentation",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":200,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["e2e",{"_index":459,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":434,"title":{},"body":{"index.html":{}}}],["err",{"_index":359,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":247,"title":{},"body":{"controllers/CatsController.html":{}}}],["errors",{"_index":382,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["errors.length",{"_index":385,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["exception",{"_index":24,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["exception.filter.ts",{"_index":7,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":18,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":41,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["excludenullinterceptor",{"_index":209,"title":{"injectables/ExcludeNullInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ExcludeNullInterceptor.html":{},"coverage.html":{}}}],["executioncontext",{"_index":295,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["export",{"_index":31,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["exports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["express",{"_index":198,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":130,"title":{},"body":{"classes/Cat.html":{},"classes/ForbiddenException.html":{}}}],["failed",{"_index":388,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["findall",{"_index":267,"title":{},"body":{"injectables/CatsService.html":{}}}],["findall(@req",{"_index":222,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall1",{"_index":158,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall2",{"_index":159,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall3",{"_index":160,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall4",{"_index":161,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall5",{"_index":162,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall6",{"_index":163,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(@param",{"_index":230,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone1(@param('id",{"_index":235,"title":{},"body":{"controllers/CatsController.html":{}}}],["forbiddenexception",{"_index":205,"title":{"classes/ForbiddenException.html":{}},"body":{"controllers/CatsController.html":{},"classes/ForbiddenException.html":{},"coverage.html":{}}}],["forroutes",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["forroutes(catscontroller",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":432,"title":{},"body":{"index.html":{}}}],["function",{"_index":367,"title":{},"body":{"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["functions",{"_index":423,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":229,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('docs",{"_index":224,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('docs')@redirect('https://docs.nestjs.com",{"_index":182,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs",{"_index":164,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs(@query('version",{"_index":226,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs(version",{"_index":181,"title":{},"body":{"controllers/CatsController.html":{}}}],["gethello",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":428,"title":{"index.html":{}},"body":{}}],["grow",{"_index":466,"title":{},"body":{"index.html":{}}}],["guard",{"_index":327,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":328,"title":{},"body":{"guards/RolesGuard.html":{}}}],["handle",{"_index":317,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["header",{"_index":189,"title":{},"body":{"controllers/CatsController.html":{}}}],["header('cache",{"_index":219,"title":{},"body":{"controllers/CatsController.html":{}}}],["hello",{"_index":126,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["here",{"_index":477,"title":{},"body":{"index.html":{}}}],["host",{"_index":15,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":34,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpcode",{"_index":188,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpcode(204",{"_index":218,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpexception",{"_index":28,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexception('forbidden",{"_index":245,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpexceptionfilter",{"_index":96,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://docs.nestjs/com/v5",{"_index":228,"title":{},"body":{"controllers/CatsController.html":{}}}],["https://nestjs.com",{"_index":484,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":29,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"classes/ForbiddenException.html":{}}}],["httpstatus.forbidden",{"_index":246,"title":{},"body":{"controllers/CatsController.html":{},"classes/ForbiddenException.html":{}}}],["httpstatus.internal_server_error",{"_index":42,"title":{},"body":{"classes/AnyExceptionFilter.html":{}}}],["id",{"_index":236,"title":{},"body":{"controllers/CatsController.html":{}}}],["identifier",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["imports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["injectable",{"_index":122,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["injectables",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":276,"title":{},"body":{"injectables/CatsService.html":{}}}],["installation",{"_index":444,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":446,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":40,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept",{"_index":293,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":294,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":321,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":322,"title":{},"body":{"interfaces/Response.html":{},"overview.html":{}}}],["interfaces/cat.interface",{"_index":204,"title":{},"body":{"controllers/CatsController.html":{}}}],["isin",{"_index":290,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isint",{"_index":285,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring",{"_index":287,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["join",{"_index":473,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":481,"title":{},"body":{"index.html":{}}}],["legend",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["license",{"_index":487,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":463,"title":{},"body":{"index.html":{}}}],["logger",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["logginginterceptor",{"_index":103,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["map",{"_index":301,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchroles",{"_index":331,"title":{},"body":{"guards/RolesGuard.html":{}}}],["matchroles(roles",{"_index":338,"title":{},"body":{"guards/RolesGuard.html":{}}}],["message",{"_index":249,"title":{},"body":{"controllers/CatsController.html":{}}}],["metadata",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":369,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["method",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["middlewareconsumer",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":422,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":462,"title":{},"body":{"index.html":{}}}],["mode",{"_index":452,"title":{},"body":{"index.html":{}}}],["model",{"_index":270,"title":{},"body":{"injectables/CatsService.html":{}}}],["module",{"_index":67,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":69,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":147,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":259,"title":{},"body":{"modules/CatsModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost:27017/nest",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":476,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":482,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/functions.html":{}}}],["ne",{"_index":240,"title":{},"body":{"controllers/CatsController.html":{}}}],["nest",{"_index":440,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":486,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":300,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["nestmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":46,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["next",{"_index":296,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["next.handle().pipe",{"_index":356,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":326,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe(map((value",{"_index":303,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{}}}],["node.js",{"_index":431,"title":{},"body":{"index.html":{}}}],["none",{"_index":167,"title":{},"body":{"controllers/CatsController.html":{}}}],["now",{"_index":315,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":320,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":445,"title":{},"body":{"index.html":{}}}],["null",{"_index":305,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{}}}],["number",{"_index":136,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"injectables/ValidatePipe.html":{}}}],["object",{"_index":380,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["observable",{"_index":174,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["of([1",{"_index":238,"title":{},"body":{"controllers/CatsController.html":{}}}],["open",{"_index":464,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["overview",{"_index":491,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":409,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":192,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":231,"title":{},"body":{"controllers/CatsController.html":{}}}],["params.id",{"_index":233,"title":{},"body":{"controllers/CatsController.html":{}}}],["path",{"_index":48,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["pipe(tap",{"_index":318,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipetransform",{"_index":375,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["plaintoclass",{"_index":376,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["plaintoclass(metatype",{"_index":381,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["please",{"_index":474,"title":{},"body":{"index.html":{}}}],["post",{"_index":171,"title":{},"body":{"controllers/CatsController.html":{}}}],["post()@httpcode(204)@header('cache",{"_index":165,"title":{},"body":{"controllers/CatsController.html":{}}}],["pre",{"_index":264,"title":{},"body":{"modules/CatsModule.html":{}}}],["prefix",{"_index":154,"title":{},"body":{"controllers/CatsController.html":{}}}],["private",{"_index":278,"title":{},"body":{"injectables/CatsService.html":{},"guards/RolesGuard.html":{},"injectables/ValidatePipe.html":{}}}],["production",{"_index":454,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":430,"title":{},"body":{"index.html":{}}}],["project",{"_index":465,"title":{},"body":{"index.html":{}}}],["promise",{"_index":176,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["prop",{"_index":137,"title":{},"body":{"classes/Cat.html":{}}}],["prop([string",{"_index":150,"title":{},"body":{"classes/Cat.html":{}}}],["prop(undefined",{"_index":143,"title":{},"body":{"classes/Cat.html":{}}}],["prop({required",{"_index":140,"title":{},"body":{"classes/Cat.html":{}}}],["properties",{"_index":132,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"interfaces/Response.html":{}}}],["provide",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["query",{"_index":191,"title":{},"body":{"controllers/CatsController.html":{}}}],["read",{"_index":475,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"modules/CatsModule.html":{},"classes/CreateCatDto.html":{}}}],["redirect",{"_index":190,"title":{},"body":{"controllers/CatsController.html":{}}}],["redirect('https://docs.nestjs.com",{"_index":225,"title":{},"body":{"controllers/CatsController.html":{}}}],["reflect",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":333,"title":{},"body":{"guards/RolesGuard.html":{}}}],["repository",{"_index":443,"title":{},"body":{"index.html":{}}}],["req",{"_index":187,"title":{},"body":{"controllers/CatsController.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":37,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{}}}],["request.url",{"_index":49,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":345,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requestmethod",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.post",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["requesttimeoutexception",{"_index":351,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["required",{"_index":149,"title":{},"body":{"classes/Cat.html":{}}}],["res",{"_index":427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["response",{"_index":35,"title":{"interfaces/Response.html":{}},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.status(status).json",{"_index":43,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["result",{"_index":50,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["returns",{"_index":25,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{}}}],["rimraf",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":207,"title":{},"body":{"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":250,"title":{},"body":{"controllers/CatsController.html":{}}}],["roles.includes(user_roles",{"_index":348,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":101,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["run",{"_index":449,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":199,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":302,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["save",{"_index":265,"title":{},"body":{"modules/CatsModule.html":{}}}],["scalable",{"_index":435,"title":{},"body":{"index.html":{}}}],["schema",{"_index":145,"title":{},"body":{"classes/Cat.html":{},"modules/CatsModule.html":{}}}],["schema.pre('save",{"_index":262,"title":{},"body":{"modules/CatsModule.html":{}}}],["schemafactory",{"_index":146,"title":{},"body":{"classes/Cat.html":{}}}],["schemafactory.createforclass(cat",{"_index":152,"title":{},"body":{"classes/Cat.html":{},"miscellaneous/variables.html":{}}}],["schemas/cats.schema",{"_index":258,"title":{},"body":{"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["server",{"_index":436,"title":{},"body":{"index.html":{}}}],["setmetadata('roles",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":437,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"index.html":{}}}],["sponsors",{"_index":468,"title":{},"body":{"index.html":{}}}],["src/.../cats.schema.ts",{"_index":497,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":424,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":124,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":125,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller.ts",{"_index":153,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:101",{"_index":178,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:107",{"_index":179,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:118",{"_index":180,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:46",{"_index":168,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:58",{"_index":184,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:76",{"_index":173,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:81",{"_index":175,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:86",{"_index":172,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:96",{"_index":177,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":256,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":266,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:11",{"_index":274,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:16",{"_index":275,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:8",{"_index":271,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/create",{"_index":283,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["src/cats/schemas/cats.schema.ts",{"_index":129,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/cats/schemas/cats.schema.ts:12",{"_index":138,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/schemas/cats.schema.ts:15",{"_index":139,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/schemas/cats.schema.ts:18",{"_index":144,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/schemas/cats.schema.ts:9",{"_index":142,"title":{},"body":{"classes/Cat.html":{}}}],["src/common/decorator/roles.decorator.ts",{"_index":403,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/exception/forbidden.exception.ts",{"_index":306,"title":{},"body":{"classes/ForbiddenException.html":{},"coverage.html":{}}}],["src/common/exception/forbidden.exception.ts:3",{"_index":307,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["src/common/filter/any",{"_index":6,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"coverage.html":{}}}],["src/common/filter/http",{"_index":309,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/guard/roles.guard.ts",{"_index":329,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guard/roles.guard.ts:19",{"_index":340,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guard/roles.guard.ts:6",{"_index":334,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guard/roles.guard.ts:8",{"_index":336,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/interceptor/exclude.null.interceptor.ts",{"_index":292,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptor/exclude.null.interceptor.ts:12",{"_index":298,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{}}}],["src/common/interceptor/logging.interceptor.ts",{"_index":311,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptor/logging.interceptor.ts:12",{"_index":312,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/interceptor/timeout.interceptor.ts",{"_index":349,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptor/timeout.interceptor.ts:13",{"_index":350,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/common/interceptor/transform.interceptor.ts",{"_index":323,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptor/transform.interceptor.ts:16",{"_index":362,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/common/middleware/logger.middleware.ts",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/pipe/validate.pipe.ts",{"_index":363,"title":{},"body":{"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["src/common/pipe/validate.pipe.ts:12",{"_index":373,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["src/common/pipe/validate.pipe.ts:25",{"_index":368,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["src/main.ts",{"_index":406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":450,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":453,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":455,"title":{},"body":{"index.html":{}}}],["started",{"_index":429,"title":{"index.html":{}},"body":{}}],["starter",{"_index":442,"title":{},"body":{"index.html":{}}}],["statements",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":39,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":44,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":478,"title":{},"body":{"index.html":{}}}],["string",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"guards/RolesGuard.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/variables.html":{}}}],["super('forbidden",{"_index":308,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["support",{"_index":469,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":489,"title":{},"body":{"modules.html":{}}}],["t",{"_index":325,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":135,"title":{},"body":{"classes/Cat.html":{}}}],["tap",{"_index":313,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["test",{"_index":458,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":461,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":460,"title":{},"body":{"index.html":{}}}],["tests",{"_index":457,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":467,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["this.catmodel(createcatdto",{"_index":280,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catmodel.find().exec",{"_index":282,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":242,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":243,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.matchroles(roles",{"_index":346,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.reflector.get('roles",{"_index":341,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.tovalidate(metatype",{"_index":379,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["throw",{"_index":244,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ValidatePipe.html":{}}}],["throwerror",{"_index":353,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":361,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":360,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout",{"_index":354,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(5000",{"_index":357,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":352,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":213,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timestamp",{"_index":45,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["touch",{"_index":479,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":364,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["tovalidate(metatype",{"_index":366,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["transform",{"_index":365,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["transform(value",{"_index":370,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["transformer",{"_index":377,"title":{},"body":{"injectables/ValidatePipe.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":211,"title":{"injectables/TransformInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":141,"title":{},"body":{"classes/Cat.html":{},"guards/RolesGuard.html":{}}}],["twitter",{"_index":485,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":495,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":389,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["types.includes(metatype",{"_index":391,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["typescript",{"_index":441,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":371,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["unit",{"_index":456,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":14,"title":{},"body":{"classes/AnyExceptionFilter.html":{}}}],["url",{"_index":186,"title":{},"body":{"controllers/CatsController.html":{}}}],["url，可以使用@redirect",{"_index":223,"title":{},"body":{"controllers/CatsController.html":{}}}],["useclass",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":261,"title":{},"body":{"modules/CatsModule.html":{}}}],["usefilters",{"_index":194,"title":{},"body":{"controllers/CatsController.html":{}}}],["usefilters(new",{"_index":217,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards",{"_index":196,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors",{"_index":197,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(new",{"_index":216,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes",{"_index":195,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes(new",{"_index":251,"title":{},"body":{"controllers/CatsController.html":{}}}],["user",{"_index":344,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.roles",{"_index":347,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user_roles",{"_index":339,"title":{},"body":{"guards/RolesGuard.html":{}}}],["validate",{"_index":378,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["validate(object",{"_index":384,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["validatepipe",{"_index":99,"title":{"injectables/ValidatePipe.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["validator",{"_index":291,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/ValidatePipe.html":{},"dependencies.html":{}}}],["value",{"_index":304,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":498,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":185,"title":{},"body":{"controllers/CatsController.html":{}}}],["void",{"_index":26,"title":{},"body":{"classes/AnyExceptionFilter.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["watch",{"_index":451,"title":{},"body":{"index.html":{}}}],["website",{"_index":483,"title":{},"body":{"index.html":{}}}],["world",{"_index":127,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":472,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AnyExceptionFilter.html":{"url":"classes/AnyExceptionFilter.html","title":"class - AnyExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnyExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filter/any-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filter/any-exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\n\n@Catch()\nexport class AnyExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CatsModule } from './cats/cats.module';\nimport { logger } from './common/middleware/logger.middleware';\nimport { CatsController } from './cats/cats.controller';\nimport { APP_FILTER } from '@nestjs/core';\nimport { HttpExceptionFilter } from './common/filter/http-exception.filter';\nimport { ValidatePipe } from './common/pipe/validate.pipe';\nimport { RolesGuard } from './common/guard/roles.guard';\nimport { LoggingInterceptor } from './common/interceptor/logging.interceptor';\nimport { MongooseModule } from '@nestjs/mongoose';\n@Module({\n  imports: [\n    CatsModule,\n    MongooseModule.forRoot('mongodb://localhost:27017/nest'),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: HttpExceptionFilter,\n    // },\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: ValidatePipe,\n    // },\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: RolesGuard,\n    // },\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: LoggingInterceptor,\n    // },\n  ],\n})\n// export class AppModule implements NestModule {\n//   configure(consumer: MiddlewareConsumer): any {\n//     consumer\n//       // .apply(cors(), helmet(), logger)\n//       .apply(logger)\n//       // .exclude(\n//       //   { path: 'cats', method: RequestMethod.GET },\n//       //   { path: 'cats', method: RequestMethod.POST },\n//       //   'cats/(.*)',\n//       // )\n//       .forRoutes(CatsController);\n//     // .forRoutes({ path: 'cats', method: RequestMethod.GET });\n//   }\n// }\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/schemas/cats.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/schemas/cats.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/schemas/cats.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/schemas/cats.schema.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/schemas/cats.schema.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CatDocument = Cat & Document;\n\n@Schema()\nexport class Cat extends Document {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  breed: string;\n\n  @Prop([String])\n  tags: string[];\n}\n\nexport const CatsSchema = SchemaFactory.createForClass(Cat);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                create1\n                            \n                            \n                                findAll1\n                            \n                            \n                                    Async\n                                findAll2\n                            \n                            \n                                findAll3\n                            \n                            \n                                findAll4\n                            \n                            \n                                    Async\n                                findAll5\n                            \n                            \n                                findAll6\n                            \n                            \n                                getDocs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(204)@Header('Cache-Control', 'none')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create1\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create1(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll1\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll1()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll2\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll2()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll3\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll3()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll4\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll4()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll5\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll5()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll6\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll6()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDocs\n                        \n                        \n                    \n                \n            \n            \n                \ngetDocs(version)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('docs')@Redirect('https://docs.nestjs.com', 302)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { url: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Req,\n  Post,\n  HttpCode,\n  Header,\n  Redirect,\n  Query,\n  Param,\n  Body,\n  HttpException,\n  HttpStatus,\n  UseFilters,\n  UsePipes,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Observable, of } from 'rxjs';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { CatsService } from './cats.service';\nimport { Cat } from './interfaces/cat.interface';\nimport { ForbiddenException } from '../common/exception/forbidden.exception';\n// import { HttpExceptionFilter } from '../common/filter/http-exception.filter';\n// import { ValidatePipe } from '../common/pipe/validate.pipe';\n// // import { RolesGuard } from '../common/guard/roles.guard';\n// import { Roles } from '../common/decorator/roles.decorator';\n// import { LoggingInterceptor } from '../common/interceptor/logging.interceptor';\n// import { ExcludeNullInterceptor } from '../common/interceptor/exclude.null.interceptor';\n// import { TransformInterceptor } from '../common/interceptor/transform.interceptor';\n// import { TimeoutInterceptor } from '../common/interceptor/timeout.interceptor';\n\n@Controller('cats') // 装饰器指定路径前缀\n// @UseInterceptors(new LoggingInterceptor()) // 拦截器\n// @UseFilters(new HttpExceptionFilter()) // 控制器作用域\n// @UseInterceptors(new ExcludeNullInterceptor()) // 拦截器\n// @UseInterceptors(new TransformInterceptor()) // 拦截器\n// @UseInterceptors(new TimeoutInterceptor()) // 拦截器\nexport class CatsController {\n  constructor(private catsService: CatsService) {}\n\n  @Post()\n  @HttpCode(204)\n  @Header('Cache-Control', 'none')\n  create(): string {\n    return ' This action adds a new cat';\n  }\n  //\n  // @Get()\n  // findAll(@Req() request: Request): string {\n  //   return 'This action returns all cats';\n  // }\n\n  // 要将相应重定向到特定的URL，可以使用@Redirect 装饰器或特定于库的相应对象\n  @Get('docs')\n  @Redirect('https://docs.nestjs.com', 302)\n  getDocs(@Query('version') version) {\n    if (version && version === '5') {\n      return { url: 'https://docs.nestjs/com/v5/' };\n    }\n  }\n\n  // @Get(':id')\n  // findOne(@Param() params): string {\n  //   console.log(params.id);\n  //   return `This action returns a #${params.id} cat11`;\n  // }\n\n  // @Get(':id')\n  // findOne1(@Param('id') id): string {\n  //   return `This action returns a #${id} cat44`;\n  // }\n\n  @Get()\n  findAll1(): Observable {\n    return of([1]);\n  }\n\n  @Get()\n  async findAll2(): Promise {\n    return [];\n  }\n\n  @Post()\n  async create1(@Body() createCatDto: CreateCatDto) {\n    return 'This action adds a ne cat';\n  }\n\n  // @Post()\n  // async create2(@Body() createCatDto: CreateCatDto) {\n  //   this.catsService.create(createCatDto);\n  // }\n\n  @Get()\n  findAll3(): Promise {\n    return this.catsService.findAll();\n  }\n\n  @Get()\n  findAll4() {\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n\n  // 覆盖整个相应正文的实例\n  @Get()\n  async findAll5() {\n    throw new HttpException(\n      {\n        status: HttpStatus.FORBIDDEN,\n        error: 'This is a custom message',\n      },\n      HttpStatus.FORBIDDEN,\n    );\n  }\n\n  @Get()\n  findAll6() {\n    throw new ForbiddenException();\n  }\n\n  // @Post()\n  // @Roles('admin')\n  // @UseFilters(new HttpExceptionFilter())\n  // @UsePipes(new ValidatePipe())\n  // async create4(@Body() createCatDto: CreateCatDto) {\n  //   throw new ForbiddenException();\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CatsModule_exports\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsService } from './cats.service';\nimport { CatsController } from './cats.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Cat, CatsSchema } from './schemas/cats.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Cat.name,\n        useFactory: () => {\n          const schema = CatsSchema;\n          schema.pre('save', () => console.log('Hello from pre save'));\n          return schema;\n        },\n      },\n    ]),\n  ],\n  controllers: [CatsController],\n  providers: [CatsService],\n  exports: [CatsService],\n})\nexport class CatsModule {\n  constructor(private readonly catsService: CatsService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cat, CatDocument } from './schemas/cats.schema';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class CatsService {\n  constructor(@InjectModel('Cat') private catModel: Model) {}\n\n  async create(createCatDto: CreateCatDto): Promise {\n    const createdCat = new this.catModel(createCatDto);\n    return createdCat.save();\n  }\n\n  async findAll(): Promise {\n    return this.catModel.find().exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt, IsIn } from 'class-validator';\n\nexport class CreateCatDto {\n  @IsString()\n  readonly name: string;\n\n  @IsInt()\n  readonly age: number;\n\n  @IsString()\n  readonly breed: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExcludeNullInterceptor.html":{"url":"injectables/ExcludeNullInterceptor.html","title":"injectable - ExcludeNullInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExcludeNullInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/exclude.null.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptor/exclude.null.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ExcludeNullInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    return next.handle().pipe(map((value) => (value === null ? '' : value)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenException.html":{"url":"classes/ForbiddenException.html","title":"class - ForbiddenException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exception/forbidden.exception.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/exception/forbidden.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class ForbiddenException extends HttpException {\n  constructor() {\n    super('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filter/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filter/http-exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    //\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/logging.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptor/logging.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable {\n    console.log('Before....');\n\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(tap(() => console.log(`After...${Date.now() - now}ms`)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/transform.interceptor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response {\n  data: T;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> | Promise>> {\n    return next.handle().pipe(map((data) => ({ data })));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guard/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                matchRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guard/roles.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guard/roles.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchRoles(roles: string[], user_roles: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guard/roles.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user_roles\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, Injectable, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    return this.matchRoles(roles, user.roles);\n  }\n  private matchRoles(roles: string[], user_roles: string) {\n    return roles.includes(user_roles);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/timeout.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptor/timeout.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Observable, TimeoutError, throwError } from 'rxjs';\nimport { timeout, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    return next.handle().pipe(\n      timeout(5000),\n      catchError((err) => {\n        if (err instanceof TimeoutError) {\n          return throwError(new RequestTimeoutException());\n        }\n        return throwError(err);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/transform.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptor/transform.interceptor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response {\n  data: T;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> | Promise>> {\n    return next.handle().pipe(map((data) => ({ data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidatePipe.html":{"url":"injectables/ValidatePipe.html","title":"injectable - ValidatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipe/validate.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipe/validate.pipe.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipe/validate.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\nimport { validate } from 'class-validator';\n\n@Injectable()\nexport class ValidatePipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype: Function): boolean {\n    const types: Function[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            Cat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/schemas/cats.schema.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/schemas/cats.schema.ts\n            \n            variable\n            CatsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorator/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/exception/forbidden.exception.ts\n            \n            class\n            ForbiddenException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filter/any-exception.filter.ts\n            \n            class\n            AnyExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filter/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guard/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/interceptor/exclude.null.interceptor.ts\n            \n            injectable\n            ExcludeNullInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptor/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptor/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptor/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/middleware/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/pipe/validate.pipe.ts\n            \n            injectable\n            ValidatePipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mongoose : ^7.2.2\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.13.0\n        \n            mongoose : ^5.11.12\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/middleware/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            logger\n                        \n                        \n                    \n                \n            \n            \n                \nlogger(req, res, next)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CatDocument   (src/.../cats.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/cats/schemas/cats.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CatDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CatsSchema   (src/.../cats.schema.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/cats/schemas/cats.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CatsSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Cat)\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/common/decorator/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
